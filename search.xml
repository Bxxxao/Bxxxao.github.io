<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>javascript_web基础</title>
    <url>/2020/07/02/javascript-web%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<blockquote>
<p>DOM、BOM学习笔记</p>
</blockquote>
<a id="more"></a>

<h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p>应用程序编程接口，一个工具，以便于能够实现想要完成的功能</p>
<h3 id="Web-API"><a href="#Web-API" class="headerlink" title="Web API"></a>Web API</h3><p>Web API是浏览器提供的一套操作浏览器功能的页面元素的API（DOM和BOM）</p>
<h3 id="DOM树"><a href="#DOM树" class="headerlink" title="DOM树"></a>DOM树</h3><p><img src="https://image.baidu.com/search/detail?ct=503316480&z=0&ipn=d&word=dom%E6%A0%91&step_word=&hs=0&pn=13&spn=0&di=4950&pi=0&rn=1&tn=baiduimagedetail&is=0%2C0&istype=0&ie=utf-8&oe=utf-8&in=&cl=2&lm=-1&st=undefined&cs=2611777439%2C1149353072&os=1158477556%2C2470529607&simid=3524551679%2C325636558&adpicid=0&lpn=0&ln=658&fr=&fmq=1605954817787_R&fm=&ic=undefined&s=undefined&hd=undefined&latest=undefined&copyright=undefined&se=&sme=&tab=0&width=undefined&height=undefined&face=undefined&ist=&jit=&cg=&bdtype=0&oriquery=&objurl=http%3A%2F%2F201907.oss-cn-shanghai.aliyuncs.com%2Fcs%2F5606289-1eeb33d901db1aa23d66ba61108e3b5d.png&fromurl=ippr_z2C%24qAzdH3FAzdH3Fooo_z%26e3B5rpkkf_z%26e3Bv54AzdH3Fpi6jw1-cbd98cl-8-8_z%26e3Bip4s&gsm=e&rpstart=0&rpnum=0&islist=&querylist=&force=undefined" alt="DOM树"><br>文档：一个页面就是一个文档 document 元素：页面中的所有标签都是元素，element 节点：网页中的所有内容都是节点（标签、属性、文本、注释等），node</p>
<p><strong>DOM把以上内容都看作是对象</strong></p>
<h2 id="DOM操作"><a href="#DOM操作" class="headerlink" title="DOM操作"></a>DOM操作</h2><hr>
<h3 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h3><hr>
<h4 id="getElementById"><a href="#getElementById" class="headerlink" title="getElementById()"></a>getElementById()</h4><p>注意：</p>
<ol>
<li>因为文档页面从上往下加载，所以先有标签，然后才能用getElementById()</li>
<li>参数是字符串，所以需要加上引号’’或””</li>
<li>返回的是一个element对象</li>
<li>console.dir()方法可以打印番号的元素对象，从而更好地查看里面的属性和方法</li>
</ol>
<h3 id="getElementByTagName"><a href="#getElementByTagName" class="headerlink" title="getElementByTagName()"></a>getElementByTagName()</h3><ol>
<li>参数是字符串，需要加上引号’’或””</li>
<li>得到的是对象的集合，可以用循环遍历来获得所有对象</li>
<li>得到的是动态的 eg：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>123一二三四五<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>123上山打老虎<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>123老虎有几只<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>123快来数一数<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>123一二三四五<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> ol = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'ol'</span>);</span></span><br><span class="line"><span class="actionscript"><span class="comment">//伪数组不能做父元素</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> list = ol[<span class="number">0</span>].getElementsByTagName(<span class="string">'li'</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(list);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.dir(list);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="getElementByClassName"><a href="#getElementByClassName" class="headerlink" title="getElementByClassName()"></a>getElementByClassName()</h3><p>类名选择器</p>
<h3 id="querySelector"><a href="#querySelector" class="headerlink" title="querySelector()"></a>querySelector()</h3><p>HTML5新增的方法<br>返回指定选择器的<strong>第一个对象</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>15212<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>1641238<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>151232<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>1612348<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="comment">/* 注意这里括号里面必须有“.”，因为需要指定的选择器是class类，同理，id类要加‘#’ */</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> boxs = <span class="built_in">document</span>.querySelector(<span class="string">'.box'</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(boxs);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="querySelectorAll"><a href="#querySelectorAll" class="headerlink" title="querySelectorAll()"></a>querySelectorAll()</h3><p>返回指定选择器的所有对象集合 用法和querySelector()一样</p>
<h3 id="document-body"><a href="#document-body" class="headerlink" title="document.body"></a>document.body</h3><p>获取body元素</p>
<h3 id="document-documentElement"><a href="#document-documentElement" class="headerlink" title="document.documentElement"></a>document.documentElement</h3><p>获取html元素</p>
<h2 id="事件挤出"><a href="#事件挤出" class="headerlink" title="事件挤出"></a>事件挤出</h2><p>javaScript使我们有能力创建动态的页面，而事件是可以被JavaScript侦测到的行为。网页中每个元素都可以产生某些触发JavaScript的事件。</p>
<h3 id="事件三要素："><a href="#事件三要素：" class="headerlink" title="事件三要素："></a>事件三要素：</h3><ul>
<li>事件源：事件被触发的对象，比如按钮<code>&lt;button&gt;内容&lt;/button&gt;</code></li>
<li>事件类型：如何出发，比如鼠标点击、鼠标经过、键盘按下、滚动滚轮等</li>
<li>事件处理程序： 通过函数赋值的方式完成 <code>对象.function(){}</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span> = <span class="string">'btn'</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>);</span></span><br><span class="line"><span class="actionscript">    btn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'触发事件'</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>鼠标事件小结</strong><br>| 鼠标事件 | 触发条件 |<br>| :—: | :—: |<br>| onclick | 鼠标点击左键触发 |<br>| onmouseover | 鼠标经过触发 |<br>| onmouseout | 鼠标离开触发 |<br>| onfocus | 获得鼠标焦点触发 |<br>| onblur | 失去鼠标焦点触发 |<br>| onmousemove | 鼠标移动触发 |<br>| onmouseup | 鼠标弹起触发 |<br>| onmousedown | 鼠标按下触发 |</p>
<h2 id="操作元素"><a href="#操作元素" class="headerlink" title="操作元素"></a>操作元素</h2><p>JavaScript可以改变网页的内容、结构、样式，我们可以利用DOM操作元素来改变元素里面的内容、属性等。</p>
<h3 id="element-innerText"><a href="#element-innerText" class="headerlink" title="element.innerText()"></a>element.innerText()</h3><ul>
<li>从起始位置到终止位置的内容，但除去HTML标签，同时也会去掉空格和换行</li>
<li>innerText不能识别HTML标签，如<p>、<h>等。</li>
<li>可读写，可以获取元素里的内容</li>
</ul>
<h3 id="element-innerHTML"><a href="#element-innerHTML" class="headerlink" title="element.innerHTML()"></a>element.innerHTML()</h3><ul>
<li>从起始位置到终止位置的全部内容，包括Html标签，同时保留空格和换行</li>
<li>能识别HTML标签</li>
<li>可读写的，可以获取元素里面的内容</li>
<li><em>PS:推荐使用这种方式*</em></li>
</ul>
<h2 id="持续更新"><a href="#持续更新" class="headerlink" title="持续更新"></a><em>持续更新</em></h2>]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>ppt平滑效果</title>
    <url>/2020/06/19/ppt%E5%B9%B3%E6%BB%91%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<blockquote>
<p>如今的ppt也能做出很炫酷的动画效果</p>
</blockquote>
<a id="more"></a>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>平滑切换效果可以帮助跨演示文稿的幻灯片实现流畅的动画/切换和对象移动效果，但是根据我的了解，我身边的大多数人使用的都是<em>offic 2016(家庭和学生版)</em>,而这个平滑效果是<em>2017年之后</em>才推出的，所以很多人都没有这个功能。接下来会介绍如何使用这个效果。</p>
<h2 id="微软两套产品体系"><a href="#微软两套产品体系" class="headerlink" title="微软两套产品体系"></a>微软两套产品体系</h2><p>在介绍之前，要先了解微软两套产品体系的区别</p>
<ul>
<li><em>Office 2016</em>是买断截止到2016年的所有功能，并不会提供更新，一次付费，永久使用。</li>
<li><em>Office 365</em>是按年订阅，保持更新最新的功能，订阅多久，就可以使用多久<br>对于大多数学生而言，一般都是第一种产品体系，即购买电脑之后便获得永久使用权限，平滑功能，只在<em>Office 365</em>订阅用户才有，2016版并不包含平滑。</li>
</ul>
<h2 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h2><p>根据微软“Office 365中的新增功能”标明的情况，想要拥有“变体”或“平滑”功能，要求满足以下两个条件：</p>
<ol>
<li>必须是Office 365，其他的版本不行</li>
<li>软件版本要在6366.2036以上</li>
</ol>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ol>
<li><p>购买Office 365<br><a href="https://www.microsoft.com/zh-cn/microsoft-365/compare-all-microsoft-365-products?&activetab=tab:primaryr1" target="_blank" rel="noopener">购买链接</a><br>现可购买Office 365 或 Office2019版</p>
</li>
<li><p>安装iSlide插件<br><a href="https://www.islide.cc/archives/18393" target="_blank" rel="noopener">下载链接</a><br>这个插件可以说是ppt第三方插件里比较出名的了，里面涵盖了很多实用的功能，即使不是为了使用<em>平滑</em>功能，也可以下载体验一下(<del>不过这个插件的平滑效果当然没有官方出的那么好</del>)</p>
</li>
<li><p>激活工具<br>这个方法比较复杂，这个方法也是我在网上找到的，我没有使用这个方法，不过也写在这个供参考<br><a href="https://www.jianshu.com/p/6d0c676416e0" target="_blank" rel="noopener">看这里</a></p>
</li>
<li><p>取巧方法<br>这个方法取巧的地方在于：不用下载插件也不需要更新，<em>PowerPoint2016</em>在切换页面里虽然不能创建平滑，但是可以播放平滑效果。<br>所以我们只需要下载或者使用<a href="https://www.woodo.cn/?f=2313" target="_blank" rel="noopener">ppt在线制作网站</a>使用<strong>已经有平滑效果的ppt</strong>然后复制带有效果的那一页就可以了，我的2016家庭/学生版亲测可以使用。</p>
</li>
</ol>
<h2 id="平滑效果"><a href="#平滑效果" class="headerlink" title="平滑效果"></a>平滑效果</h2><p><img src="https://pic2.zhimg.com/50/v2-706501ef4638f16b644ac61338ffcf87_hd.webp" alt="平滑"></p>
<p>最近开始学着如何设计ppt而不是直接使用网上的ppt模板，感觉这个平滑功能是一个强有力的工具，可以利用起来。也顺便介绍一个很全的有关设计的<a href="http://hao.shejidaren.com/" target="_blank" rel="noopener">网站导航</a></p>
]]></content>
      <categories>
        <category>产品</category>
      </categories>
      <tags>
        <tag>ppt</tag>
      </tags>
  </entry>
  <entry>
    <title>程序员的字体知识</title>
    <url>/2020/06/16/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%AD%97%E4%BD%93%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<blockquote>
<p>好的字体是成功的一半</p>
</blockquote>
<a id="more"></a>

<p>程序员一天要面对屏幕很长时间，其中大部分时间是在使用终端、使用 IDE。因此，为了保证我们的身心健康，选择一款良好的字体至关重要。本文将带你了解一些我知道的文字小知识，让你为自己更好地选择字体。</p>
<h2 id="衬体与无衬线体"><a href="#衬体与无衬线体" class="headerlink" title="衬体与无衬线体"></a>衬体与无衬线体</h2><p>衬体（Serif）是有衬线的字体，而无衬线体（sans-serif）则是没有衬线的字体。所谓衬线，即是 Windows 下 Word 文档中宋体的装饰线，它们是在笔画的起始和末端用于装饰的。无衬线体比衬体干扰成分少，简洁明了，适合用于编程。顺带一提，无衬线体在旧时代也被称作“grotesque”，因此也被称为哥特体（Gothic）。</p>
<h2 id="等宽字体与比例字体"><a href="#等宽字体与比例字体" class="headerlink" title="等宽字体与比例字体"></a>等宽字体与比例字体</h2><p>等宽字体（Monospaced Font）是指字体宽度相同的电脑字体，而比例字体（Proportional Font）是指字体宽度不尽相同的字体。为了更好地对齐，使代码美观，你应该使用等宽字体（一般等宽字体名字都带有 mono）。值得注意的，同时包含中英文的等宽字体是指汉字与英文字母的比为 2 : 1 而非宽度相同的字体。</p>
<h2 id="窄引号与全宽引号"><a href="#窄引号与全宽引号" class="headerlink" title="窄引号与全宽引号"></a>窄引号与全宽引号</h2><p>窄引号是指中文引号的宽度为半个汉字宽度，而全宽宽引号是指中文引号的宽度为一个汉字宽度。在编程中很少使用到中文引号，可以随个人喜好选择。</p>
<h2 id="半宽破折号与全宽破折号"><a href="#半宽破折号与全宽破折号" class="headerlink" title="半宽破折号与全宽破折号"></a>半宽破折号与全宽破折号</h2><p>半宽破折号是指破折号的长度为标准的一半宽度，而全宽宽引号是指破折号的宽度为标准宽度。这里的破折号是指 em dashes（关于这些横杠杠的区别可以看<a href="https://zhuanlan.zhihu.com/p/31819513" target="_blank" rel="noopener">这里</a>）。在编程中较少使用，但个人比较喜欢全宽。</p>
<h2 id="连字"><a href="#连字" class="headerlink" title="连字"></a>连字</h2><p>连字（Ligature）是指将多个符号连接成一个，比如将 &lt;= 连接成 ≤ ，属于锦上添花的小特性，可以根据个人喜好选择。</p>
<h2 id="字形"><a href="#字形" class="headerlink" title="字形"></a>字形</h2><p>主要是针对中日韩文字，一般有以下字形：</p>
<ul>
<li>SC:简体中文</li>
<li>TC：台湾繁体中文</li>
<li>J：日文</li>
<li>K：韩文</li>
<li>HC：香港繁体中文</li>
</ul>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>font</tag>
      </tags>
  </entry>
  <entry>
    <title>int正整数在内存中存储1的个数</title>
    <url>/2020/03/22/int%E6%AD%A3%E6%95%B4%E6%95%B0%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E5%AD%98%E5%82%A81%E7%9A%84%E4%B8%AA%E6%95%B0/</url>
    <content><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>地址：<a href="https://www.nowcoder.com/practice/440f16e490a0404786865e99c6ad91c9?tpId=37&amp;tqId=21238&amp;rp=0&amp;ru=/ta/huawei&amp;qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">https://www.nowcoder.com/practice/440f16e490a0404786865e99c6ad91c9?tpId=37&amp;tqId=21238&amp;rp=0&amp;ru=/ta/huawei&amp;qru=/ta/huawei/question-ranking</a></p>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>这道题我想用两种思想来解决</p>
<p>第一种：二进制的思想<br>我们之前学过将十进制转化为2进制，其实这道题就是二进制转化的变形，通过这个数取余运算得到的数会是0或者1，那么如果取余得到的数是1，那么cnt加一，再让这个数除2，循环这个过程，直到该数为0停止循环</p>
<p>第二种：按位&amp;与运算<br>在计算机中，数都是以二进制的形式存储的，和这道题的要求一致，所以可以直接按位&amp;运算（按位&amp;运算即为，当两个数都为1是，&amp;运算的结果为1，a&amp;b==1当且仅当a、b都为1）</p>
<h2 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h2><p>第一种：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">2</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        n/=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第二种：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        n=n&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;cnt;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>牛客</tag>
      </tags>
  </entry>
  <entry>
    <title>sentence-reverse</title>
    <url>/2020/03/22/sentence-reverse/</url>
    <content><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>地址：<a href="https://www.nowcoder.com/practice/48b3cb4e3c694d9da5526e6255bb73c3?tpId=37&amp;tqId=21236&amp;tPage=1&amp;rp=&amp;ru=%2Fta%2Fhuawei&amp;qru=%2Fta%2Fhuawei%2Fquestion-ranking" target="_blank" rel="noopener">https://www.nowcoder.com/practice/48b3cb4e3c694d9da5526e6255bb73c3?tpId=37&amp;tqId=21236&amp;tPage=1&amp;rp=&amp;ru=%2Fta%2Fhuawei&amp;qru=%2Fta%2Fhuawei%2Fquestion-ranking</a></p>
<a id="more"></a>

<h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><p>很久没有练习了，开始练一下牛客网上的题目吧（还记得当时数据结构老师每节课都叫我们回去多练练）</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>要逆序一个句子里的单词，和以前经常做的逆序输出字符串很像，不过这次是要把句子里的单词作为一个整体。所以在这里我使用了c++标准库里的栈结构stack</p>
<h2 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="built_in">string</span>&gt; s;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;str)&#123;</span><br><span class="line">        s.push(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!s.empty())&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s.top()&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">        s.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>今天 想写点什么</title>
    <url>/2020/01/27/%E4%BB%8A%E5%A4%A9-%E6%83%B3%E5%86%99%E7%82%B9%E4%BB%80%E4%B9%88/</url>
    <content><![CDATA[<blockquote>
<p>Mamba out.<br>           —–Kobe Bryant</p>
</blockquote>
<a id="more"></a>
<h3 id="这一年的开局真的太糟糕了。"><a href="#这一年的开局真的太糟糕了。" class="headerlink" title="这一年的开局真的太糟糕了。"></a>这一年的开局真的太糟糕了。</h3><p>进入2020年，二十一世纪的第二个十年，怀着全面小康的憧憬，似乎事情一直在变好。但是这一年才刚刚过去二十多天，我们都笼罩在新型冠状病毒的阴影之下，我们痛恨乱吃野味的人，让这个新年过得异常压抑，我们痛恨趁着国难当头恶意炒高口罩的人。当然事情也似乎在慢慢变好，也有人开始从肺炎中治愈，人们也开始真正重视起了这个病毒。</p>
<p>今天，我起得很晚，一直睡到中午十二点。睁开眼睛之后，我像往常一样，拿起手边的手机，打开微信，便看到消息框里有人和我说“科比出事了”。我的第一反应便是：<em>不敢相信</em>，但是看到铺天盖地的新闻、朋友圈，才慢慢相信，这不是幻觉。</p>
<blockquote>
<p>明天和意外不知道哪一个先来，最重要的是珍惜眼前人。</p>
</blockquote>
<p>最近这一个月的事情真的真的，告诫我，<strong>平平安安</strong>就好。</p>
<p>我大概08年开始看球，当时因为爱上了篮球，也爱上了nba，开始的时候，对球员们很脸盲，只认识当年最具人气的两个球员，即便到了现在，他们两个也是人气最高的两个球员，一个名字叫<em>勒布朗詹姆斯</em>，一个便是<em>科比布莱恩特</em>。这是我最喜欢的两个球员，这么多年过去了，联盟诞生了无数个球员，他们仍是我的初心。那时候的比赛还很好看，对抗很多，比赛很流畅。不像现在一样那么疲软，动不动就皮毛犯规。那个时候，联盟还没有抱团，基本上每支球队都会一个当家球星。当初在球场上，穿23号24号的人最多，但是我觉得这很张狂，所以我后来选择球衣号码更喜欢10号，这也是科比在国家队的球衣号码。</p>
<p>当时非常期待能在总决赛上看到23vs24，这应该也是大多数人的愿望，但是09年，还是魔兽的霍华德在内线如日中天，在东决击败了小皇帝詹姆斯，23vs24又要推迟一年了，害我心里是这么想的。那一年更成熟、技术更精湛的科比击败了来势汹汹的魔兽，夺得了离开奥尼尔之后的第一个总冠军及个人首个fmvp，证明了自己也能独当一面。</p>
<p>10年，小皇帝折戟绿军，时隔一年后nba两大豪门再度重逢总决赛，科比终于在总决赛上成功复仇，拿到了自己的第五个总冠军，奥尼尔看到这一幕应该要气死了吧哈哈哈哈哈。</p>
<p>之后发生了很多事，詹姆斯远渡东海岸，联手DW、bosh，老鹰常规赛统治东部，湖人组成f4，勇士崛起引起小球风暴，以及，湖人的沉沦。</p>
<p>还能记得当年的f4，从组建时的不可一世，到后来的笑柄，科比许下承诺，无论如何也要把湖人带进季后赛。这对于当初的湖人很难，但那可是科比！只是这个代价太大了，老大拼断了自己的跟腱，换来的季后赛，在季后赛首轮便被马刺横扫出局，而科比也从此走下神坛。我曾为此很讨厌火花，好在这个赛季霍师傅很给力。</p>
<p>还记得2016年退役战，当时我高二，上完课回到宿舍，整个男生宿舍都围在一张床上看湖人和爵士的最后一节比赛。科比在最后一节大杀四方，50,52！54！..60!最后随着最后杀死比赛的罚球，科比的得分定格在60分，nba历史退役战最高分，男生宿舍如同地震一般，欢呼声响彻整个一中。我想这一幕，这辈子再也不会有了吧。随着科比的一句“Mamba out”，也带走了我们的青春。</p>
<p>退役后的科比，仍然在其他领域发光发热。商业投资、写书、拿下奥斯卡奖，似乎除了生儿子再也没有能难倒科比的事了哈哈哈哈。科比曾说过，如果在未来谈到他时，如果篮球仍是他最大的荣耀，那么他的人生便是失败的。是啊，科比是个多么骄傲的人，“第二名就是最大的输家”，这句话曾是最激励我的话，他本能在其他领域做出更多的奉献，事情本该如此…</p>
<p>科比的最后一条ins，是祝贺詹姆斯职业生涯总得分超过自己，这两个我最喜欢的球星，希望詹姆斯能带着这份力量move forward。</p>
<p>如果我是沃格尔，那么这赛季的口号我会定为： <em>for kobe.</em></p>
<p>希望今年六月份，詹姆斯能在斯台普斯球馆，面对着摄影机，喊出：<em>Kobe,this is for you!</em>就如同2016年绝地反击一样，我相信你能。</p>
<p>曼巴已逝，我希望能带着这种精神，坚定不移地走下去。</p>
<p><em>#Mamba never out.</em><br><em>#Rest in peace.</em><br><em>#1978-2020</em></p>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://inews.gtimg.com/newsapp_bt/0/11260072167/641" alt="Kobe byrant"></h2>]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>casual</tag>
      </tags>
  </entry>
  <entry>
    <title>167. Two Sum II - Input array is sorted (Easy)</title>
    <url>/2020/01/27/167-Two-Sum-II-Input-array-is-sorted-Easy/</url>
    <content><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>地址：<a href="https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/comments/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/comments/</a></p>
<a id="more"></a>

<h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h3><p>最近在练习Leetcode，看到一个新的名词“双指针”，突然很感兴趣，便想找一些题目练习一下。<br>这里的指针，其实和C语言中的指针不能严格意义上的划等号，可以说，双指针的意思可能更准确来说是一个标记，即类似于数组下标index的意思。</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p><strong>使用双指针，一个指针指向值较小的元素，一个指针指向值较大的元素。指向较小元素的指针从头向尾遍历，指向较大元素的指针从尾向头遍历。</strong></p>
<p>如果两个指针指向元素的和 sum == target，那么得到要求的结果；<br>如果 sum &gt; target，移动较大的元素，使 sum 变小一些；<br>如果 sum &lt; target，移动较小的元素，使 sum 变大一些。<br>数组中的元素最多遍历一次，时间复杂度为 O(N)。只使用了两个额外变量，空间复杂度为 O(1)。</p>
<p><img src="https://camo.githubusercontent.com/98b3f53b56644b038cddd17fb1f6b4d5d1546989/68747470733a2f2f63732d6e6f7465732d313235363130393739362e636f732e61702d6775616e677a686f752e6d7971636c6f75642e636f6d2f34333763623534632d353937302d346261392d623265662d3235343166376436633831652e676966" alt="思路"></p>
<h2 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="symbol">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span>[] twoSum(<span class="built_in">int</span>[] numbers, <span class="built_in">int</span> target) &#123;</span><br><span class="line">        <span class="built_in">int</span>[] res = new <span class="built_in">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="built_in">int</span> low = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> high = numbers.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (low &lt; high) &#123;</span><br><span class="line">            <span class="keyword">if</span> (numbers[low] + numbers[high] &gt; target) &#123;</span><br><span class="line">                high--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (numbers[low] + numbers[high] &lt; target) &#123;</span><br><span class="line">                low++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                res[<span class="number">0</span>] = low + <span class="number">1</span>;</span><br><span class="line">                res[<span class="number">1</span>] = high + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> <span class="keyword">target</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (numbers == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = numbers.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="keyword">int</span> sum = numbers[i] + numbers[j];</span><br><span class="line">        <span class="keyword">if</span> (sum == <span class="keyword">target</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;i + <span class="number">1</span>, j + <span class="number">1</span>&#125;;</span><br><span class="line">        &#125; <span class="function"><span class="keyword">else</span> <span class="title">if</span> <span class="params">(sum &lt; <span class="keyword">target</span>)</span> </span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>Leetcode</tag>
        <tag>双指针</tag>
      </tags>
  </entry>
  <entry>
    <title>136.A number that appears only once</title>
    <url>/2020/01/17/136-A-number-that-appears-only-once/</url>
    <content><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>地址：<a href="https://leetcode-cn.com/problems/single-number/solution/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/single-number/solution/</a></p>
<a id="more"></a>

<p><strong>分析</strong><br><strong>题目有个条件可谓相当重要，即凡重复的元素最多重复一次（原话：给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次）。如果没有这个条件，那么这篇文章使用的方法不成立</strong></p>
<p><strong>方法一：按位异或计算</strong><br>这是个非常巧妙的方法，针对这一题的特殊情况（即重复的元素最多重复一次）</p>
<p>在运用按位异或操作符之前得先了解一下，什么是按位异或操作符？（大佬直接略过）</p>
<p>按位操作符的字面意思很好理解，即对值的二进制格式进行处理的操作符。而异或的作用为：假设有值甲、乙，当甲乙值相等时，异或操作后结果为不等（False，0），反之，为相等（True，1）。所以按位异或操作符的释义便显而易见了：对某值的每个位上的值（0或1）进行异或操作。</p>
<p>异或本是机器语言，满足交换律，相当于将相同的数字先异或，这样两两异或只剩下0，然后0再和最后一个数字异或得到最终的值</p>
<p><strong>逻辑思路</strong><br>有一个数组，含有值：12，7，12。<strong>并含有一个变量甲，其值为0。</strong></p>
<blockquote>
</blockquote>
<p>——————第一次：</p>
<p>12：0 0 0 0 1 1 0 0 </p>
<p>甲：0 0 0 0 0 0 0 0</p>
<p>异或</p>
<p>甲：0 0 0 0 1 1 0 0（值为12）</p>
<p>——————第二次</p>
<p> 7：0 0 0 0 0 1 1 1</p>
<p>甲：0 0 0 0 1 1 0 0</p>
<p>异或</p>
<p>甲：0 0 0 0 1 0 1 1（值为11）</p>
<p>——————第三次</p>
<p>12：0 0 0 0 1 1 0 0</p>
<p>甲：0 0 0 0 1 0 1 1</p>
<p>异或</p>
<p>甲：0 0 0 0 0 1 1 1（值为7）</p>
<p>——————遍历结束</p>
<p><strong>参考文献</strong><br>作者：magicalchao<br>链接：<a href="https://leetcode-cn.com/problems/single-number/solution/cou-yi-pian-ti-jie-hua-shuo-ti-jie-hen-hao-wan-by-/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/single-number/solution/cou-yi-pian-ti-jie-hua-shuo-ti-jie-hen-hao-wan-by-/</a><br>来源：力扣（LeetCode）</p>
<p><strong>解题代码</strong></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">Test</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">		<span class="built_in">int</span> nums[] = &#123;<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>&#125;;</span><br><span class="line">		<span class="built_in">int</span> res=<span class="number">0</span>; <span class="comment">// 变量甲，这里的0是有原因的不是盲目的</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span> ;i&lt;nums.length;i++) &#123;</span><br><span class="line">			res^=nums[i]; <span class="comment">//^为异或运算符，Java语言提供按位异或运算符</span></span><br><span class="line">		&#125;</span><br><span class="line">		System.<span class="keyword">out</span>.print(res);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p><em>待更新</em></p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>按位异或运算</tag>
        <tag>哈希表</tag>
        <tag>Leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>casual gossip</title>
    <url>/2020/01/17/casual-gossip/</url>
    <content><![CDATA[<h2 id="试着写一篇内容吧"><a href="#试着写一篇内容吧" class="headerlink" title="试着写一篇内容吧"></a>试着写一篇内容吧</h2><a id="more"></a>

<p>不知道是一代人的通病亦或是方法会有问题<br>“分配不来时间” / “我懒嘛” / “我在硬撑”<br>作为一个成年人不只是应该学会给自己做一些加法减法<br>情绪调控 / 能力认知 / 自我总结甚至是分清楚什么是合理对自己施压<br>为什么会有人看上去明明很轻松实际上get到许多想要的<br>或许 只有尝试过 才明白 自己到底有什么水平吧</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>casual</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/01/04/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p>XYF</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
